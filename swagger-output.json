{
  "swagger": "2.0",
  "info": {
    "title": "Exam project API",
    "description": "API Documentation",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT token obtained after login"
    }
  },
  "paths": {
    "/": {
      "get": {
        "description": "Render login page for admin dashboard as home page",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/init": {
      "post": {
        "description": "initial database populations for the App, populate role table, Create a initial Admin user in the Users table, Populate the membership table ",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/search": {
      "post": {
        "description": "This endpoint is used to search for records in the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/search"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/products/": {
      "get": {
        "description": "Get All products by using raw SQL queries",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create new product, all field are required",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "description": "Update the product with given Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "brandId": {
                  "example": "any"
                },
                "categoryId": {
                  "example": "any"
                },
                "imgurl": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "Delete a product with the given Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/": {
      "get": {
        "description": "Getting all categories",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "adding new categories",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "description": "editing/changing a category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "delete/remove a category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/brands/": {
      "get": {
        "description": "Getting all the brands",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "adding new brand",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/brand"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/brands/{id}": {
      "put": {
        "description": "editing/changing a brand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "delete/remove a brand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/cart/": {
      "get": {
        "description": "getting all the product items that has been added to the cart for the current logged in users active cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "adding a product to a logged in users cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "editing/changing a cart product item quantity",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "delete/remove a product item from the current logged in users active cart",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cart/checkout/now": {
      "post": {
        "description": "Check out the users cart\r  try {\r  const order = await cartService.checkoutCart(req.user.id);\r \r  res.baseJson(201, ",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "description": "get all orders for the logged in user OR all orders for all users if an admin user is logged in",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{id}": {
      "put": {
        "description": "changing an order status admin only",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/products": {
      "get": {
        "description": "get products and render be display",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/brands": {
      "get": {
        "description": "Get brands and render be display",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "description": "Get categories and render be display",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/roles": {
      "get": {
        "description": "Get roles and render to display",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "description": "get users and render all to display",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "description": "get orders and render to display",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "register new users, with unique username, password, as well as a unique email address",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "allow registerd users to login",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/users": {
      "get": {
        "description": "Get all users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "change or update users details",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/roles": {
      "get": {
        "description": "Get all the roles like User or admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/membership/": {
      "get": {
        "description": "Getting all the membership status",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "register": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "register"
        },
        "lastname": {
          "type": "string",
          "example": "swagger"
        },
        "username": {
          "type": "string",
          "example": "swagger test"
        },
        "email": {
          "type": "string",
          "example": "swagger@hotmail.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        },
        "address": {
          "type": "string",
          "example": "swagger"
        },
        "telephonenumber": {
          "type": "string",
          "example": "1234567890"
        }
      },
      "required": [
        "firstname",
        "lastname",
        "username",
        "email",
        "password",
        "address",
        "telephonenumber"
      ]
    },
    "login": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "swagger test"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "brand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "swagger brand"
        }
      },
      "required": [
        "name"
      ]
    },
    "category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "swagger category"
        }
      },
      "required": [
        "name"
      ]
    },
    "cart": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "number",
          "example": 2
        },
        "quantity": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "productId",
        "quantity"
      ]
    },
    "order": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "In Progress"
        }
      },
      "required": [
        "status"
      ]
    },
    "product": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "swagger"
        },
        "description": {
          "type": "string",
          "example": "swagger description"
        },
        "price": {
          "type": "number",
          "example": 100
        },
        "quantity": {
          "type": "number",
          "example": 2
        },
        "brand": {
          "type": "number",
          "example": 1
        },
        "category": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "brand",
        "category"
      ]
    },
    "search": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "example": "iphone"
        }
      },
      "required": [
        "productName"
      ]
    }
  }
}